import readline
import re
import stringprep
import difflib
import numpy as np
list_2D = [[6, 1, 2, 7, 4, 8, 5, 3, 9], [2, 6, 7, 8, 3, 4, 1, 9, 5], [1, 5, 6, 2, 8, 7, 9, 4, 3], [9, 3, 5, 1, 2, 6, 4, 7, 8], [3, 4, 9, 5, 6, 1, 8, 2, 7], [5, 9, 1, 6, 7, 2, 3, 8, 4], [4, 8, 3, 9, 1, 5, 7, 6, 2], [8, 7, 4, 3, 5, 9, 2, 1, 6], [7, 2, 8, 4, 9, 3, 6, 5, 1]]
print(np.matrix(list_2D))
def possible(y, x, n):
	for i in range(0, 9):
		if list_2D[y][i] == n:
			return False
	for i in range(0,9):
		if list_2D[x][i] == n:
			return False
	x0 = (x//3)*3
	y0 = (y//3)*3
	for i in range(0, 3):
		for j in range(0, 3):
			if list_2D[y0+i][x0+j] == n:
				return False
	return True
def solve():
	for y in range(9):
		for x in range(9):
			if list_2D[y][x] == 0:
				for n in range(1, 10):
					if possible(y,x,n):
						print(np.matrix(list_2D))
						print(y, x, n)
						list_2D[y][x] = n
						solve()
						list_2D[y][x] = 0
			return
	print(np.matrix(list_2D))
	input("More? ")
solve()
print(possible(4,4,3))
print(possible(4,4,5))
